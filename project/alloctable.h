//--------------------------------------------------------------
// Функция, выделяющая память под AllocTableEmployed
// Так как изначально ничего не заполнено, то изначальная память не имеет заполненных кусков
// Принимает размер памяти
// Возвращает массив занятых Allopart - ов
//--------------------------------------------------------------
AllocPart* create_AllocTableEmployed (int Memsize);

//--------------------------------------------------------------
// Функция, выделяющая память под AllocTableFree
// Так как изначально ничего не заполнено, то вся изначальная память - один большой кусок свободной памяти
// Принимает указатель на память, её размер
// Возвращает массив свободных Allopart - ов
//--------------------------------------------------------------
AllocPart* create_AllocTableFree (int* Memory, int Memsize);

//--------------------------------------------------------------
// Функция, освобождающая память от обоих AllocTable
// Принимает  Таблицы аллокаций
// Возвращает ничего
//--------------------------------------------------------------
void destroyBothAllocTables (AllocPart* AllocTableFree, AllocPart* AllocTableEmployed);

//---------------------------------------------------------------------
// занесение данных в таблицу аллокации занятых областей
// Принимает  указатель на память, указатель на таблицу аллокации занятых областей
// Возвращает размер занятой области (в ячейках)
//--------------------------------------------------------------

int EnterValuesEmployed (int* Memory, int allowedMem ,AllocPart* AllocTableEmployed);
//---------------------------------------------------------------------
//занесение данных в таблицу аллокации пустых областей
//Принимает : указатель на память, указатель на таблицу аллокации пустых областей
//Возвращает размер пустой области (В ячейках)
//---------------------------------------------------------------------
int EnterValuesFree (int* Memory, int allowedMem ,AllocPart* AllocTableFree);
//---------------------------------------------------------------------
//проверка на заполненность области
//Принимает : указатель на память
//Возвращает единицу если ячейка заполнена и ноль если ячейка пуста
//--------------------------------------------------------------

int IsEmployed (int* Memory);

//---------------------------------------------------------------------
//Создание таблицы аллокаций
//Принимает : указатель на память, размер памяти, указатели на таблицы аллокаций заполненных и пустых областей,
//			  массив, куда запишутся количества кусков свободной и занятой памятей
//Возвращает ничего
//--------------------------------------------------------------

void AllocTab (int* Memory, int SizeOfMemory, AllocPart* AllocTableEmployed, AllocPart* AllocTableFree, int* Amount_of_mem_parts);

//------------------------------------------------------------------------------
// Функция обрабатывает состояние памяти
// Принимает указатель на начало памяти и её размер, указатели на массив
// 			  Allocpart-ов, массив из количества цельных кусков свободной и занятой памяти
// Возвращает ничего 
//------------------------------------------------------------------------------
void processMemory(int* Memory, int SizeOfMemory, AllocPart* AllocTableEmployed, AllocPart* AllocTableFree, int* Amount_of_mem_parts);
