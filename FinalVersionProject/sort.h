#include "struct.h"
//--------------------------------------------------------------
// компаратор для сортировки по размеру памяти
//--------------------------------------------------------------

int MemCompareAllocTable (AllocPart* MemorySet1, AllocPart* MemorySet2);

//----------------------------------------------------------------------
// swap двух указанных элементов для сортировки по размеру памяти
//----------------------------------------------------------------------
void MemSwapAllocPart (AllocPart *MemoryArea_1, AllocPart *MemoryArea_2);

//---------------------------------------------------------------------
// сортировка по размеру памяти
//---------------------------------------------------------------------
void MemSortAllocTable (AllocPart* AllocTable, int left, int right);

//--------------------------------------------------------------
// компаратор для таблицы аллокций
//--------------------------------------------------------------

int TaskCompareAllocTable (Task* Task1, Task* Task2);

//----------------------------------------------------------------------
// swap двух указанных элементов для сортировки задач
//----------------------------------------------------------------------

void TaskSwapAllocPart (Task* Task1, Task* Task2);


//---------------------------------------------------------------------
// сортировка задач
// работает по тому же принципу
//---------------------------------------------------------------------
void TaskSortAllocTable (Task* taskarr, int left, int right);

//-----------------------------------------------------------------------------
// Данная функция должна в уже отсортированном по размеру массиве AllocTable
// отсортировать одинаковые по размеру куски по адресам от меньшего к большему
// Данная функция отбирает группы кусков с одинаковым размером и отсылает их
// на сортировку по адресу
//-----------------------------------------------------------------------------

void AddressSort (AllocPart* AllocTable, int Memsize);
//-----------------------------------------------------------------------------
// Компаратар адресов
// Просто сравниваем адреса, на которые указывают allocpart'ы как числа
//-----------------------------------------------------------------------------

int AddressCompareAllocTable (AllocPart* MemorySet1, AllocPart* MemorySet2);

//---------------------------------------------------------------------
// сортировка по адресам
// Также как и по размеру, только компратор другой
//---------------------------------------------------------------------

void AddressSortAllocTable (AllocPart* AllocTable, int left, int right);